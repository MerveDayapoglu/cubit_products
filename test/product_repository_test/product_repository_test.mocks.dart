// Mocks generated by Mockito 5.4.4 from annotations
// in cubit_products/test/product_repository_test/product_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:cubit_products/data/model/product_model.dart' as _i2;
import 'package:cubit_products/data/provider/product_provider.dart' as _i3;
import 'package:dio/dio.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeProductModel_0 extends _i1.SmartFake implements _i2.ProductModel {
  _FakeProductModel_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ProductProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockProductProvider extends _i1.Mock implements _i3.ProductProvider {
  MockProductProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  set dio(_i4.Dio? dio) => super.noSuchMethod(
        Invocation.setter(
          #dio,
          dio,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Future<List<_i2.ProductModel>> getProducts() => (super.noSuchMethod(
        Invocation.method(
          #getProducts,
          [],
        ),
        returnValue:
            _i5.Future<List<_i2.ProductModel>>.value(<_i2.ProductModel>[]),
      ) as _i5.Future<List<_i2.ProductModel>>);

  @override
  _i5.Future<_i2.ProductModel> getProductDetail(int? id) => (super.noSuchMethod(
        Invocation.method(
          #getProductDetail,
          [id],
        ),
        returnValue: _i5.Future<_i2.ProductModel>.value(_FakeProductModel_0(
          this,
          Invocation.method(
            #getProductDetail,
            [id],
          ),
        )),
      ) as _i5.Future<_i2.ProductModel>);
}
